h1. Behave

A standard pattern to easily define and add behavior to a global behavior repository. This pattern contains a macro that makes it easier to add such behaviors to 
Ruby classes of your choice. The Behave pattern will be demonstrated by the _troles_ gems for adding role behavior.
Behave also makes it easy to support multiple kinds of datastores via the _schemaker_ gem, that takes care of configuring your model relationships.  

h2. Usage

First you must define your behavior and then add it to the singleton Behavior Repository like this:

<pre>
  Behave::Repository.add_behavior(:hello) do |behavior|
    behavior.configuration_class = MyBehavior::Configuration
  end      
</pre>

Then you can apply the behavior to various modules/classes as you need via the #behavior macro.

<pre>
  class User  
    behavior(:trole_groups).configure :strategy => :ref_one do |config|
      ... # your config here!
    end.configure!
</pre>

This will add a #behaviors collection at the class level, where each item is a Behave::Decorator instance. 
Each such Behave::Decorator instance has a Behave::Configuration object that configures it.

The Behave::Configuration encapsulates concepts such as storage, strategy etc. and can do schema/model configuration (using schemaker) etc.

<pre>
class User  
  behavior(:trole_groups).configure(:strategy) :ref_one do |strategy|
    strategy.orm = :mongoid
    strategy.auto_load = true
  end.configure!
end  
</pre>

The result of the #behavior call is a Behave::Config object (you must inherit from and override as necessary), where you then latsly call #configure to apply the configurations on the module or class (the subject). Enjoy!

See the code for more details for now. This is currently work in progress...

h2. Contributing to behave
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

h2. Copyright

Copyright (c) 2011 Kristian Mandrup. See LICENSE.txt for
further details.

